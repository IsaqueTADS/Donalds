// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id             String         @id @default(uuid())
  name           String
  slug           String
  description    String
  avatarImageUrl String
  coverImageurl  String
  menuCatagory   MenuCatagory[]
  products       Product[]
  orders         Order[]
  createdAt      DateTime       @default(now())
  updateAt       DateTime       @updatedAt
}

model MenuCatagory {
  id           String     @id @default(uuid())
  name         String
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String
  products     Product[]
  createdAt    DateTime   @default(now())
  updateAt     DateTime   @updatedAt
}

model Product {
  id             String         @id @default(uuid())
  name           String
  description    String
  price          Float
  imageUrl       String
  ingredients    String[]
  orderProducts  OrderProduct[]
  restaurant     Restaurant     @relation(fields: [restaurantId], references: [id])
  restaurantId   String
  menuCategory   MenuCatagory   @relation(fields: [menuCatagoryId], references: [id])
  menuCatagoryId String
  createdAt      DateTime       @default(now())
  updateAt       DateTime       @updatedAt
}

model Order {
  id                Int               @id @default(autoincrement())
  total             Float
  status            OrderStatus
  consunptionMethod consunptionMethod
  restaurant        Restaurant        @relation(fields: [restaurantId], references: [id])
  restaurantId      String
  orderProducts     OrderProduct[]
  createdAt         DateTime          @default(now())
  updateAt          DateTime          @updatedAt
}

model OrderProduct {
  id        String   @id @default(uuid())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  order     Order    @relation(fields: [orderID], references: [id])
  orderID   Int
  quantity  Int
  Price     Float
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  IN_PREPARATION
  FINISHED
}

enum consunptionMethod {
  TAKEAMAY
  DINE_IN
}
